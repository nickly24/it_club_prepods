{"ast":null,"code":"var _jsxFileName = \"/Users/nickly/Desktop/\\u041F\\u0440\\u043E\\u0433\\u0430/project7/client/src/analytics/Analytics.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport YearSelector from './YearSelector';\nimport FilialSelector from './FilialSelector';\nimport AnalyticsTable from './AnalyticsTable';\nimport ProfitChart from './ProfitChart';\nimport { API_BASE_URL } from './Api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Analytics = () => {\n  _s();\n  const [selectedYear, setSelectedYear] = useState('');\n  const [selectedFilial, setSelectedFilial] = useState('');\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    if (selectedYear && selectedFilial) {\n      fetchAllData();\n    }\n  }, [selectedYear, selectedFilial]);\n  const fetchAllData = async () => {\n    try {\n      const dataJan = await fetchData('01');\n      const dataFeb = await fetchData('02');\n      const dataMar = await fetchData('03');\n      const dataApr = await fetchData('04');\n      const dataMay = await fetchData('05');\n      const dataJun = await fetchData('06');\n      const dataJul = await fetchData('07');\n      const dataAug = await fetchData('08');\n      const dataSep = await fetchData('09');\n      const dataOct = await fetchData('10');\n      const dataNov = await fetchData('11');\n      const dataDec = await fetchData('12');\n      const allData = [...dataJan, ...dataFeb, ...dataMar, ...dataApr, ...dataMay, ...dataJun, ...dataJul, ...dataAug, ...dataSep, ...dataOct, ...dataNov, ...dataDec];\n      console.log('All Data:', allData); // Логирование данных\n      const groupedData = groupDataByMonth(allData);\n      console.log('Grouped Data:', groupedData); // Логирование сгруппированных данных\n      setData(groupedData);\n    } catch (error) {\n      console.error('Ошибка при получении данных аналитики:', error);\n    }\n  };\n  const fetchData = async month => {\n    try {\n      const response = await axios.get(`${API_BASE_URL}/analytics/${selectedYear}/${month}/${selectedFilial}`);\n      return response.data;\n    } catch (error) {\n      console.error(`Ошибка при получении данных за месяц ${month}:`, error);\n      return [];\n    }\n  };\n  const groupDataByMonth = data => {\n    const grouped = data.reduce((acc, record) => {\n      const month = record.date.substring(0, 7);\n      if (!acc[month]) {\n        acc[month] = [];\n      }\n      acc[month].push(record);\n      return acc;\n    }, {});\n    return Object.keys(grouped).map(month => ({\n      month,\n      records: grouped[month]\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"analytics\",\n    children: [/*#__PURE__*/_jsxDEV(YearSelector, {\n      selectedYear: selectedYear,\n      setSelectedYear: setSelectedYear\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FilialSelector, {\n      selectedFilial: selectedFilial,\n      setSelectedFilial: setSelectedFilial\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AnalyticsTable, {\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ProfitChart, {\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n_s(Analytics, \"DpixSIMxoDUswdgrw1sBmlSCk58=\");\n_c = Analytics;\nexport default Analytics;\nvar _c;\n$RefreshReg$(_c, \"Analytics\");","map":{"version":3,"names":["React","useState","useEffect","axios","YearSelector","FilialSelector","AnalyticsTable","ProfitChart","API_BASE_URL","jsxDEV","_jsxDEV","Analytics","_s","selectedYear","setSelectedYear","selectedFilial","setSelectedFilial","data","setData","fetchAllData","dataJan","fetchData","dataFeb","dataMar","dataApr","dataMay","dataJun","dataJul","dataAug","dataSep","dataOct","dataNov","dataDec","allData","console","log","groupedData","groupDataByMonth","error","month","response","get","grouped","reduce","acc","record","date","substring","push","Object","keys","map","records","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/nickly/Desktop/Прога/project7/client/src/analytics/Analytics.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport YearSelector from './YearSelector';\nimport FilialSelector from './FilialSelector';\nimport AnalyticsTable from './AnalyticsTable';\nimport ProfitChart from './ProfitChart';\nimport { API_BASE_URL } from './Api';\n\nconst Analytics = () => {\n  const [selectedYear, setSelectedYear] = useState('');\n  const [selectedFilial, setSelectedFilial] = useState('');\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    if (selectedYear && selectedFilial) {\n      fetchAllData();\n    }\n  }, [selectedYear, selectedFilial]);\n\n  const fetchAllData = async () => {\n    try {\n      const dataJan = await fetchData('01');\n      const dataFeb = await fetchData('02');\n      const dataMar = await fetchData('03');\n      const dataApr = await fetchData('04');\n      const dataMay = await fetchData('05');\n      const dataJun = await fetchData('06');\n      const dataJul = await fetchData('07');\n      const dataAug = await fetchData('08');\n      const dataSep = await fetchData('09');\n      const dataOct = await fetchData('10');\n      const dataNov = await fetchData('11');\n      const dataDec = await fetchData('12');\n\n      const allData = [\n        ...dataJan, \n        ...dataFeb, \n        ...dataMar, \n        ...dataApr, \n        ...dataMay, \n        ...dataJun, \n        ...dataJul, \n        ...dataAug, \n        ...dataSep, \n        ...dataOct, \n        ...dataNov, \n        ...dataDec\n      ];\n\n      console.log('All Data:', allData); // Логирование данных\n      const groupedData = groupDataByMonth(allData);\n      console.log('Grouped Data:', groupedData); // Логирование сгруппированных данных\n      setData(groupedData);\n    } catch (error) {\n      console.error('Ошибка при получении данных аналитики:', error);\n    }\n  };\n\n  const fetchData = async (month) => {\n    try {\n      const response = await axios.get(`${API_BASE_URL}/analytics/${selectedYear}/${month}/${selectedFilial}`);\n      return response.data;\n    } catch (error) {\n      console.error(`Ошибка при получении данных за месяц ${month}:`, error);\n      return [];\n    }\n  };\n\n  const groupDataByMonth = (data) => {\n    const grouped = data.reduce((acc, record) => {\n      const month = record.date.substring(0, 7);\n      if (!acc[month]) {\n        acc[month] = [];\n      }\n      acc[month].push(record);\n      return acc;\n    }, {});\n    return Object.keys(grouped).map(month => ({\n      month,\n      records: grouped[month]\n    }));\n  };\n\n  return (\n    <div className='analytics'>\n      <YearSelector selectedYear={selectedYear} setSelectedYear={setSelectedYear} />\n      <FilialSelector selectedFilial={selectedFilial} setSelectedFilial={setSelectedFilial} />\n      <AnalyticsTable data={data} />\n      <ProfitChart data={data} />\n    </div>\n  );\n};\n\nexport default Analytics;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}