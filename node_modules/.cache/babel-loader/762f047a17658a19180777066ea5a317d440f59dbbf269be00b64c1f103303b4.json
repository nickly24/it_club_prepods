{"ast":null,"code":"import React,{useEffect,useState}from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const MetroStationsSelector=_ref=>{let{selectedStation,setSelectedStation}=_ref;const[stations,setStations]=useState([]);const[searchText,setSearchText]=useState('');useEffect(()=>{const fetchStations=async()=>{const response=await fetch('https://overpass-api.de/api/interpreter',{method:'POST',body:\"\\n          [out:json];\\n          area[name=\\\"\\u041C\\u043E\\u0441\\u043A\\u0432\\u0430\\\"]->.searchArea;\\n          node[\\\"railway\\\"=\\\"station\\\"](area.searchArea);\\n          out body;\\n        \"});const data=await response.json();const stations=data.elements.map(element=>({id:element.id,name:element.tags.name,line:element.tags['railway:ref'],color:element.tags['colour']}));setStations(stations);};fetchStations();},[]);const filteredStations=stations.filter(station=>station.name.toLowerCase().includes(searchText.toLowerCase()));const handleStationSelect=station=>{setSelectedStation({name:station.name,color:station.color});setSearchText(station.name);};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"\\u0421\\u0442\\u0430\\u043D\\u0446\\u0438\\u044F \\u043C\\u0435\\u0442\\u0440\\u043E:\",/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:searchText,onChange:e=>setSearchText(e.target.value),style:{width:'300px',padding:'8px',fontSize:'16px'}})]}),searchText&&/*#__PURE__*/_jsx(\"ul\",{style:{listStyleType:'none',padding:0,margin:0,maxHeight:'200px',overflowY:'auto',border:'1px solid #ccc',borderRadius:'4px'},children:filteredStations.map(station=>/*#__PURE__*/_jsxs(\"li\",{onClick:()=>handleStationSelect(station),style:{padding:'8px',cursor:'pointer',display:'flex',alignItems:'center'},children:[/*#__PURE__*/_jsx(\"span\",{style:{display:'inline-block',width:'12px',height:'12px',borderRadius:'50%',backgroundColor:station.color,marginRight:'8px'}}),station.name]},station.id))})]});};export default MetroStationsSelector;","map":{"version":3,"names":["React","useEffect","useState","jsx","_jsx","jsxs","_jsxs","MetroStationsSelector","_ref","selectedStation","setSelectedStation","stations","setStations","searchText","setSearchText","fetchStations","response","fetch","method","body","data","json","elements","map","element","id","name","tags","line","color","filteredStations","filter","station","toLowerCase","includes","handleStationSelect","children","type","value","onChange","e","target","style","width","padding","fontSize","listStyleType","margin","maxHeight","overflowY","border","borderRadius","onClick","cursor","display","alignItems","height","backgroundColor","marginRight"],"sources":["/Users/nickly/Desktop/Прога/project7/client/src/modules/MetroStationsSelector.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\nconst MetroStationsSelector = ({ selectedStation, setSelectedStation }) => {\n  const [stations, setStations] = useState([]);\n  const [searchText, setSearchText] = useState('');\n\n  useEffect(() => {\n    const fetchStations = async () => {\n      const response = await fetch('https://overpass-api.de/api/interpreter', {\n        method: 'POST',\n        body: `\n          [out:json];\n          area[name=\"Москва\"]->.searchArea;\n          node[\"railway\"=\"station\"](area.searchArea);\n          out body;\n        `,\n      });\n      const data = await response.json();\n      const stations = data.elements.map(element => ({\n        id: element.id,\n        name: element.tags.name,\n        line: element.tags['railway:ref'],\n        color: element.tags['colour'],\n      }));\n      setStations(stations);\n    };\n\n    fetchStations();\n  }, []);\n\n  const filteredStations = stations.filter(station =>\n    station.name.toLowerCase().includes(searchText.toLowerCase())\n  );\n\n  const handleStationSelect = (station) => {\n    setSelectedStation({ name: station.name, color: station.color });\n    setSearchText(station.name);\n  };\n\n  return (\n    <div>\n      <label>\n        Станция метро:<br/>\n        <input\n          type=\"text\"\n          value={searchText}\n          onChange={(e) => setSearchText(e.target.value)}\n          style={{ width: '300px', padding: '8px', fontSize: '16px' }}\n        />\n      </label>\n      {searchText && (\n        <ul style={{ listStyleType: 'none', padding: 0, margin: 0, maxHeight: '200px', overflowY: 'auto', border: '1px solid #ccc', borderRadius: '4px' }}>\n          {filteredStations.map(station => (\n            <li\n              key={station.id}\n              onClick={() => handleStationSelect(station)}\n              style={{ padding: '8px', cursor: 'pointer', display: 'flex', alignItems: 'center' }}\n            >\n              <span\n                style={{\n                  display: 'inline-block',\n                  width: '12px',\n                  height: '12px',\n                  borderRadius: '50%',\n                  backgroundColor: station.color,\n                  marginRight: '8px'\n                }}\n              ></span>\n              {station.name}\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nexport default MetroStationsSelector;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}