{"ast":null,"code":"var _jsxFileName = \"/Users/nickly/Desktop/\\u041F\\u0440\\u043E\\u0433\\u0430/project7/client/src/modules/AddFilial.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MetroStations = () => {\n  _s();\n  const [stations, setStations] = useState([]);\n  useEffect(() => {\n    const fetchStations = async () => {\n      const response = await fetch('https://overpass-api.de/api/interpreter', {\n        method: 'POST',\n        body: `\n          [out:json];\n          area[name=\"Москва\"]->.searchArea;\n          node[\"railway\"=\"station\"](area.searchArea);\n          out body;\n        `\n      });\n      const data = await response.json();\n      const stations = data.elements.map(element => ({\n        id: element.id,\n        name: element.tags.name,\n        line: element.tags['railway:ref'],\n        color: element.tags['colour']\n      }));\n      setStations(stations);\n    };\n    fetchStations();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u0412\\u044B\\u0431\\u043E\\u0440 \\u0441\\u0442\\u0430\\u043D\\u0446\\u0438\\u0438 \\u043C\\u0435\\u0442\\u0440\\u043E\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"\\u0421\\u0442\\u0430\\u043D\\u0446\\u0438\\u044F \\u043C\\u0435\\u0442\\u0440\\u043E:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          children: stations.map(station => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: station.name,\n            style: {\n              color: station.color\n            },\n            children: station.name\n          }, station.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(MetroStations, \"KV8CcP3gcIUxQ2C9moSCRW/KKrI=\");\n_c = MetroStations;\nexport default MetroStations;\nvar _c;\n$RefreshReg$(_c, \"MetroStations\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","MetroStations","_s","stations","setStations","fetchStations","response","fetch","method","body","data","json","elements","map","element","id","name","tags","line","color","children","fileName","_jsxFileName","lineNumber","columnNumber","station","value","style","_c","$RefreshReg$"],"sources":["/Users/nickly/Desktop/Прога/project7/client/src/modules/AddFilial.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\nconst MetroStations = () => {\n  const [stations, setStations] = useState([]);\n\n  useEffect(() => {\n    const fetchStations = async () => {\n      const response = await fetch('https://overpass-api.de/api/interpreter', {\n        method: 'POST',\n        body: `\n          [out:json];\n          area[name=\"Москва\"]->.searchArea;\n          node[\"railway\"=\"station\"](area.searchArea);\n          out body;\n        `,\n      });\n      const data = await response.json();\n      const stations = data.elements.map(element => ({\n        id: element.id,\n        name: element.tags.name,\n        line: element.tags['railway:ref'],\n        color: element.tags['colour'],\n      }));\n      setStations(stations);\n    };\n\n    fetchStations();\n  }, []);\n\n  return (\n    <div>\n      <h1>Выбор станции метро</h1>\n      <form>\n        <label>\n          Станция метро:\n          <select>\n            {stations.map(station => (\n              <option key={station.id} value={station.name} style={{ color: station.color }}>\n                {station.name}\n              </option>\n            ))}\n          </select>\n        </label>\n      </form>\n    </div>\n  );\n};\n\nexport default MetroStations;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACd,MAAMQ,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,yCAAyC,EAAE;QACtEC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAG;AACf;AACA;AACA;AACA;AACA;MACM,CAAC,CAAC;MACF,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAClC,MAAMR,QAAQ,GAAGO,IAAI,CAACE,QAAQ,CAACC,GAAG,CAACC,OAAO,KAAK;QAC7CC,EAAE,EAAED,OAAO,CAACC,EAAE;QACdC,IAAI,EAAEF,OAAO,CAACG,IAAI,CAACD,IAAI;QACvBE,IAAI,EAAEJ,OAAO,CAACG,IAAI,CAAC,aAAa,CAAC;QACjCE,KAAK,EAAEL,OAAO,CAACG,IAAI,CAAC,QAAQ;MAC9B,CAAC,CAAC,CAAC;MACHb,WAAW,CAACD,QAAQ,CAAC;IACvB,CAAC;IAEDE,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAAAoB,QAAA,gBACEpB,OAAA;MAAAoB,QAAA,EAAI;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC5BxB,OAAA;MAAAoB,QAAA,eACEpB,OAAA;QAAAoB,QAAA,GAAO,4EAEL,eAAApB,OAAA;UAAAoB,QAAA,EACGjB,QAAQ,CAACU,GAAG,CAACY,OAAO,iBACnBzB,OAAA;YAAyB0B,KAAK,EAAED,OAAO,CAACT,IAAK;YAACW,KAAK,EAAE;cAAER,KAAK,EAAEM,OAAO,CAACN;YAAM,CAAE;YAAAC,QAAA,EAC3EK,OAAO,CAACT;UAAI,GADFS,OAAO,CAACV,EAAE;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAEf,CACT;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAACtB,EAAA,CA5CID,aAAa;AAAA2B,EAAA,GAAb3B,aAAa;AA8CnB,eAAeA,aAAa;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}