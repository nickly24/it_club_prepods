{"ast":null,"code":"var _jsxFileName = \"/Users/nickly/Desktop/\\u041F\\u0440\\u043E\\u0433\\u0430/project7/client/src/modules/AddFilial.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MetroStations = ({\n  initialStationName = '',\n  initialStationColor = ''\n}) => {\n  _s();\n  const [stations, setStations] = useState([]);\n  const [searchText, setSearchText] = useState('');\n  const [selectedStation, setSelectedStation] = useState({\n    name: initialStationName,\n    color: initialStationColor\n  });\n  useEffect(() => {\n    const fetchStations = async () => {\n      const response = await fetch('https://overpass-api.de/api/interpreter', {\n        method: 'POST',\n        body: `\n          [out:json];\n          area[name=\"Москва\"]->.searchArea;\n          node[\"railway\"=\"station\"](area.searchArea);\n          out body;\n        `\n      });\n      const data = await response.json();\n      const stations = data.elements.map(element => ({\n        id: element.id,\n        name: element.tags.name,\n        line: element.tags['railway:ref'],\n        color: element.tags['colour']\n      }));\n      setStations(stations);\n    };\n    fetchStations();\n  }, []);\n  const filteredStations = stations.filter(station => station.name.toLowerCase().includes(searchText.toLowerCase()));\n  const handleStationSelect = station => {\n    setSelectedStation({\n      name: station.name,\n      color: station.color\n    });\n    setSearchText(station.name);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u0412\\u044B\\u0431\\u043E\\u0440 \\u0441\\u0442\\u0430\\u043D\\u0446\\u0438\\u0438 \\u043C\\u0435\\u0442\\u0440\\u043E\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"\\u0421\\u0442\\u0430\\u043D\\u0446\\u0438\\u044F \\u043C\\u0435\\u0442\\u0440\\u043E:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: searchText,\n          onChange: e => setSearchText(e.target.value),\n          style: {\n            width: '300px',\n            padding: '8px',\n            fontSize: '16px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), searchText && /*#__PURE__*/_jsxDEV(\"ul\", {\n        style: {\n          listStyleType: 'none',\n          padding: 0,\n          margin: 0,\n          maxHeight: '200px',\n          overflowY: 'auto',\n          border: '1px solid #ccc',\n          borderRadius: '4px'\n        },\n        children: filteredStations.map(station => /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => handleStationSelect(station),\n          style: {\n            padding: '8px',\n            cursor: 'pointer',\n            display: 'flex',\n            alignItems: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              display: 'inline-block',\n              width: '12px',\n              height: '12px',\n              borderRadius: '50%',\n              backgroundColor: station.color,\n              marginRight: '8px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 17\n          }, this), station.name]\n        }, station.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\u0412\\u044B \\u0432\\u044B\\u0431\\u0440\\u0430\\u043B\\u0438:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), selectedStation.name && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          alignItems: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            display: 'inline-block',\n            width: '12px',\n            height: '12px',\n            borderRadius: '50%',\n            backgroundColor: selectedStation.color,\n            marginRight: '8px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this), selectedStation.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(MetroStations, \"rx8kFfD6lvsVHXq+/G4ZwGcGQ5U=\");\n_c = MetroStations;\nexport default MetroStations;\nvar _c;\n$RefreshReg$(_c, \"MetroStations\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","MetroStations","initialStationName","initialStationColor","_s","stations","setStations","searchText","setSearchText","selectedStation","setSelectedStation","name","color","fetchStations","response","fetch","method","body","data","json","elements","map","element","id","tags","line","filteredStations","filter","station","toLowerCase","includes","handleStationSelect","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","style","width","padding","fontSize","listStyleType","margin","maxHeight","overflowY","border","borderRadius","onClick","cursor","display","alignItems","height","backgroundColor","marginRight","marginTop","_c","$RefreshReg$"],"sources":["/Users/nickly/Desktop/Прога/project7/client/src/modules/AddFilial.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\nconst MetroStations = ({ initialStationName = '', initialStationColor = '' }) => {\n  const [stations, setStations] = useState([]);\n  const [searchText, setSearchText] = useState('');\n  const [selectedStation, setSelectedStation] = useState({\n    name: initialStationName,\n    color: initialStationColor,\n  });\n\n  useEffect(() => {\n    const fetchStations = async () => {\n      const response = await fetch('https://overpass-api.de/api/interpreter', {\n        method: 'POST',\n        body: `\n          [out:json];\n          area[name=\"Москва\"]->.searchArea;\n          node[\"railway\"=\"station\"](area.searchArea);\n          out body;\n        `,\n      });\n      const data = await response.json();\n      const stations = data.elements.map(element => ({\n        id: element.id,\n        name: element.tags.name,\n        line: element.tags['railway:ref'],\n        color: element.tags['colour'],\n      }));\n      setStations(stations);\n    };\n\n    fetchStations();\n  }, []);\n\n  const filteredStations = stations.filter(station =>\n    station.name.toLowerCase().includes(searchText.toLowerCase())\n  );\n\n  const handleStationSelect = (station) => {\n    setSelectedStation({ name: station.name, color: station.color });\n    setSearchText(station.name);\n  };\n\n  return (\n    <div>\n      <h1>Выбор станции метро</h1>\n      <form>\n        <label>\n          Станция метро:\n          <input\n            type=\"text\"\n            value={searchText}\n            onChange={(e) => setSearchText(e.target.value)}\n            style={{ width: '300px', padding: '8px', fontSize: '16px' }}\n          />\n        </label>\n        {searchText && (\n          <ul style={{ listStyleType: 'none', padding: 0, margin: 0, maxHeight: '200px', overflowY: 'auto', border: '1px solid #ccc', borderRadius: '4px' }}>\n            {filteredStations.map(station => (\n              <li\n                key={station.id}\n                onClick={() => handleStationSelect(station)}\n                style={{ padding: '8px', cursor: 'pointer', display: 'flex', alignItems: 'center' }}\n              >\n                <span\n                  style={{\n                    display: 'inline-block',\n                    width: '12px',\n                    height: '12px',\n                    borderRadius: '50%',\n                    backgroundColor: station.color,\n                    marginRight: '8px'\n                  }}\n                ></span>\n                {station.name}\n              </li>\n            ))}\n          </ul>\n        )}\n      </form>\n      <div style={{ marginTop: '20px' }}>\n        <h2>Вы выбрали:</h2>\n        {selectedStation.name && (\n          <div style={{ display: 'flex', alignItems: 'center' }}>\n            <span\n              style={{\n                display: 'inline-block',\n                width: '12px',\n                height: '12px',\n                borderRadius: '50%',\n                backgroundColor: selectedStation.color,\n                marginRight: '8px'\n              }}\n            ></span>\n            {selectedStation.name}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default MetroStations;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}