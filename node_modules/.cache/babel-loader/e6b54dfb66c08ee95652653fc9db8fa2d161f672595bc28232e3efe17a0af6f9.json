{"ast":null,"code":"var _jsxFileName = \"/Users/nickly/Desktop/\\u041F\\u0440\\u043E\\u0433\\u0430/project7/client/src/analytics/Analytics.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport YearSelector from './YearSelector';\nimport FilialSelector from './FilialSelector';\nimport AnalyticsTable from './AnalyticsTable';\nimport ProfitChart from './ProfitChart';\nimport { API_BASE_URL } from './Api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Analytics = () => {\n  _s();\n  const [selectedYear, setSelectedYear] = useState('');\n  const [selectedFilial, setSelectedFilial] = useState('');\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    if (selectedYear) {\n      fetchData();\n    }\n  }, [selectedYear, selectedFilial]);\n  const fetchData = async () => {\n    const months = [...Array(12).keys()].map(i => (i + 1).toString().padStart(2, '0'));\n    try {\n      const responses = await Promise.all(months.map(month => axios.get(`${API_BASE_URL}/dnevnik/${selectedYear}/${month}`)));\n      const allData = responses.map(response => response.data);\n      console.log('All Data:', allData); // Логирование данных\n      const groupedData = groupDataByMonth(allData.flat());\n      console.log('Grouped Data:', groupedData); // Логирование сгруппированных данных\n      setData(groupedData);\n    } catch (error) {\n      console.error('Ошибка при получении данных аналитики:', error);\n    }\n  };\n  const groupDataByMonth = data => {\n    const grouped = data.reduce((acc, record) => {\n      const month = record.date.substring(0, 7);\n      if (!acc[month]) {\n        acc[month] = [];\n      }\n      acc[month].push(record);\n      return acc;\n    }, {});\n    return Object.keys(grouped).map(month => ({\n      month,\n      records: grouped[month]\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"analytics\",\n    children: [/*#__PURE__*/_jsxDEV(YearSelector, {\n      selectedYear: selectedYear,\n      setSelectedYear: setSelectedYear\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FilialSelector, {\n      selectedFilial: selectedFilial,\n      setSelectedFilial: setSelectedFilial\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AnalyticsTable, {\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ProfitChart, {\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(Analytics, \"DpixSIMxoDUswdgrw1sBmlSCk58=\");\n_c = Analytics;\nexport default Analytics;\nvar _c;\n$RefreshReg$(_c, \"Analytics\");","map":{"version":3,"names":["React","useState","useEffect","axios","YearSelector","FilialSelector","AnalyticsTable","ProfitChart","API_BASE_URL","jsxDEV","_jsxDEV","Analytics","_s","selectedYear","setSelectedYear","selectedFilial","setSelectedFilial","data","setData","fetchData","months","Array","keys","map","i","toString","padStart","responses","Promise","all","month","get","allData","response","console","log","groupedData","groupDataByMonth","flat","error","grouped","reduce","acc","record","date","substring","push","Object","records","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/nickly/Desktop/Прога/project7/client/src/analytics/Analytics.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport YearSelector from './YearSelector';\nimport FilialSelector from './FilialSelector';\nimport AnalyticsTable from './AnalyticsTable';\nimport ProfitChart from './ProfitChart';\nimport { API_BASE_URL } from './Api';\n\nconst Analytics = () => {\n  const [selectedYear, setSelectedYear] = useState('');\n  const [selectedFilial, setSelectedFilial] = useState('');\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    if (selectedYear) {\n      fetchData();\n    }\n  }, [selectedYear, selectedFilial]);\n\n  const fetchData = async () => {\n    const months = [...Array(12).keys()].map(i => (i + 1).toString().padStart(2, '0'));\n\n    try {\n      const responses = await Promise.all(months.map(month => \n        axios.get(`${API_BASE_URL}/dnevnik/${selectedYear}/${month}`)\n      ));\n\n      const allData = responses.map(response => response.data);\n      console.log('All Data:', allData); // Логирование данных\n      const groupedData = groupDataByMonth(allData.flat());\n      console.log('Grouped Data:', groupedData); // Логирование сгруппированных данных\n      setData(groupedData);\n    } catch (error) {\n      console.error('Ошибка при получении данных аналитики:', error);\n    }\n  };\n\n  const groupDataByMonth = (data) => {\n    const grouped = data.reduce((acc, record) => {\n      const month = record.date.substring(0, 7);\n      if (!acc[month]) {\n        acc[month] = [];\n      }\n      acc[month].push(record);\n      return acc;\n    }, {});\n    return Object.keys(grouped).map(month => ({\n      month,\n      records: grouped[month]\n    }));\n  };\n\n  return (\n    <div className='analytics'>\n      <YearSelector selectedYear={selectedYear} setSelectedYear={setSelectedYear} />\n      <FilialSelector selectedFilial={selectedFilial} setSelectedFilial={setSelectedFilial} />\n      <AnalyticsTable data={data} />\n      <ProfitChart data={data} />\n    </div>\n  );\n};\n\nexport default Analytics;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}